{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/cube.vue?vue&type=style&index=0&id=4f082c76&scoped=true&lang=css&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/cube.vue","mtime":1626155443296},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNoaHsKICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDI1NSwwLDAsMCksIHJnYmEoMjU1LDAsMCwxKSk7CiAgYm9yZGVyOiBub25lOwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxNXB4IDMycHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgZm9udC1zaXplOiAxNnB4OwoKfQoK"},{"version":3,"sources":["cube.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"cube.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"test\">\n\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'inputData'\n\n  ],\n  data () {\n    return {\n      palette1: [{ color1: 'red', color2: 'blue' }],\n      palette2: [{ color1: 'black', color2: 'yellow' }]\n\n    }\n  },\n  methods: {\n\n    palette () {\n\n    }\n  },\n  mounted: function () {\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 }\n    const width = 550 - margin.left - margin.right\n    const height = 520 - margin.top - margin.bottom\n\n    // append the svg object to the body of the page\n    var svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform',\n        'translate(' + margin.left + ',' + margin.top + ')')\n\n    // Labels of row and columns\n    var myGroups = this.inputData.map(item => item.label)\n    var myVars = this.inputData.map(item => item.value)\n\n    // Build X scales and axis:\n    var x = d3.scaleBand()\n      .range([0, width])\n      .domain(myGroups)\n      .padding(0.01)\n    svg.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end')\n      .style('font-size', 15)\n    var y = d3.scaleBand()\n      .range([height, 0])\n      .domain(myVars)\n      .padding(0.01)\n    svg.append('g')\n      .call(d3.axisLeft(y))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)')\n      .style('text-anchor', 'end')\n      .style('font-size', 15)\n      .selectAll('text')\n      .attr('transform', 'translate(4.5,0)')\n      .style('font-size', 10)\n\n    // Build color scale\n\n    svg.selectAll()\n      .data(this.inputData, function (d) { return d.label + ':' + d.value })\n      .enter()\n      .append('rect')\n      .attr('x', function (d) { return x(d.label) })\n      .attr('y', function (d) { return y(d.value) })\n      .attr('width', x.bandwidth())\n      .attr('height', y.bandwidth())\n      .attr('fill', d => d.color)\n  }\n}\n\n</script>\n<style scoped>\n#hh{\n   background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1));\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n\n}\n\n</style>\n"]}]}