{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/circularbarplot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/circularbarplot.vue","mtime":1626155420456},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICdpbnB1dERhdGEnCgogIF0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewoKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZXRoZW1lIChjb2xvcikgewogICAgICBkMy5zZWxlY3RBbGwoJ3BhdGgnKQogICAgICAgIC50cmFuc2l0aW9uKCkKICAgICAgICAuZHVyYXRpb24oMjAwMCkKICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBjb2xvcikKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGNvbnN0IG1hcmdpbiA9IHsgdG9wOiAzMCwgcmlnaHQ6IDMwLCBib3R0b206IDcwLCBsZWZ0OiA2MCB9CiAgICBjb25zdCB3aWR0aCA9IDU1MCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0CiAgICBjb25zdCBoZWlnaHQgPSA1MjAgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbQogICAgY29uc3QgaW5uZXJSYWRpdXMgPSA5MAogICAgY29uc3Qgb3V0ZXJSYWRpdXMgPSBNYXRoLm1pbih3aWR0aCwgaGVpZ2h0KSAvIDIgLy8gdGhlIG91dGVyUmFkaXVzIGdvZXMgZnJvbSB0aGUgbWlkZGxlIG9mIHRoZSBTVkcgYXJlYSB0byB0aGUgYm9yZGVyCgogICAgLy8gYXBwZW5kIHRoZSBzdmcgb2JqZWN0CiAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoJyN0ZXN0JykKICAgICAgLmFwcGVuZCgnc3ZnJykKICAgICAgLmF0dHIoJ3dpZHRoJywgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkKICAgICAgLmF0dHIoJ2hlaWdodCcsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKQogICAgICAuYXBwZW5kKCdnJykKICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHt3aWR0aCAvIDIgKyBtYXJnaW4ubGVmdH0sICR7aGVpZ2h0IC8gMiArIG1hcmdpbi50b3B9KWApCgogICAgLy8gU2NhbGVzCiAgICBjb25zdCB4ID0gZDMuc2NhbGVCYW5kKCkKICAgICAgLnJhbmdlKFswLCAyICogTWF0aC5QSV0pIC8vIFggYXhpcyBnb2VzIGZyb20gMCB0byAycGkgPSBhbGwgYXJvdW5kIHRoZSBjaXJjbGUuIElmIEkgc3RvcCBhdCAxUGksIGl0IHdpbGwgYmUgYXJvdW5kIGEgaGFsZiBjaXJjbGUKICAgICAgLmFsaWduKDApIC8vIFRoaXMgZG9lcyBub3RoaW5nCiAgICAgIC5kb21haW4odGhpcy5pbnB1dERhdGEubWFwKGQgPT4gZC5sYWJlbCkpIC8vIFRoZSBkb21haW4gb2YgdGhlIFggYXhpcyBpcyB0aGUgbGlzdCBvZiBzdGF0ZXMuCiAgICBjb25zdCBtYXggPSBNYXRoLm1heC5hcHBseShudWxsLCB0aGlzLmlucHV0RGF0YS5tYXAoaXRlbSA9PiBpdGVtLnZhbHVlKSkKICAgIGNvbnN0IHkgPSBkMy5zY2FsZVJhZGlhbCgpCiAgICAgIC5yYW5nZShbaW5uZXJSYWRpdXMsIG91dGVyUmFkaXVzXSkgLy8gRG9tYWluIHdpbGwgYmUgZGVmaW5lIGxhdGVyLgogICAgICAuZG9tYWluKFswLCBtYXhdKSAvLyBEb21haW4gb2YgWSBpcyBmcm9tIDAgdG8gdGhlIG1heCBzZWVuIGluIHRoZSBkYXRhCiAgICAvLyBBZGQgdGhlIGJhcnMKICAgIHN2Zy5hcHBlbmQoJ2cnKQogICAgICAuc2VsZWN0QWxsKCdwYXRoJykKICAgICAgLmRhdGEodGhpcy5pbnB1dERhdGEpCiAgICAgIC5qb2luKCdwYXRoJykKICAgICAgLmF0dHIoJ2ZpbGwnLCBkID0+IGQuY29sb3IpCiAgICAgIC5hdHRyKCdkJywgZDMuYXJjKCkgLy8gaW1hZ2luZSB5b3VyIGRvaW5nIGEgcGFydCBvZiBhIGRvbnV0IHBsb3QKICAgICAgICAuaW5uZXJSYWRpdXMoaW5uZXJSYWRpdXMpCiAgICAgICAgLm91dGVyUmFkaXVzKGQgPT4geShkLnZhbHVlKSkKICAgICAgICAuc3RhcnRBbmdsZShkID0+IHgoZC5sYWJlbCkpCiAgICAgICAgLmVuZEFuZ2xlKGQgPT4geChkLmxhYmVsKSArIHguYmFuZHdpZHRoKCkpCiAgICAgICAgLnBhZEFuZ2xlKDAuMDEpCiAgICAgICAgLnBhZFJhZGl1cyhpbm5lclJhZGl1cykpCgogICAgLy8gQWRkIHRoZSBsYWJlbHMKICAgIHN2Zy5hcHBlbmQoJ2cnKQogICAgICAuc2VsZWN0QWxsKCdnJykKICAgICAgLmRhdGEodGhpcy5pbnB1dERhdGEpCiAgICAgIC5qb2luKCdnJykKICAgICAgLmF0dHIoJ3RleHQtYW5jaG9yJywgZnVuY3Rpb24gKGQpIHsgcmV0dXJuICh4KGQubGFiZWwpICsgeC5iYW5kd2lkdGgoKSAvIDIgKyBNYXRoLlBJKSAlICgyICogTWF0aC5QSSkgPCBNYXRoLlBJID8gJ2VuZCcgOiAnc3RhcnQnIH0pCiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gJ3JvdGF0ZSgnICsgKCh4KGQubGFiZWwpICsgeC5iYW5kd2lkdGgoKSAvIDIpICogMTgwIC8gTWF0aC5QSSAtIDkwKSArICcpJyArICd0cmFuc2xhdGUoJyArICh5KGQudmFsdWUpICsgMTApICsgJywwKScgfSkKICAgICAgLmFwcGVuZCgndGV4dCcpCiAgICAgIC50ZXh0KGZ1bmN0aW9uIChkKSB7IHJldHVybiAoZC5sYWJlbCkgfSkKICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uIChkKSB7IHJldHVybiAoeChkLmxhYmVsKSArIHguYmFuZHdpZHRoKCkgLyAyICsgTWF0aC5QSSkgJSAoMiAqIE1hdGguUEkpIDwgTWF0aC5QSSA/ICdyb3RhdGUoMTgwKScgOiAncm90YXRlKC0zNjApJyB9KQogICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsICcxNXB4JykKICAgICAgLmF0dHIoJ2FsaWdubWVudC1iYXNlbGluZScsICdtaWRkbGUnKQogIH0KfQoK"},{"version":3,"sources":["circularbarplot.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"circularbarplot.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"test\">\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'inputData'\n\n  ],\n  data () {\n    return {\n\n    }\n  },\n  methods: {\n    changetheme (color) {\n      d3.selectAll('path')\n        .transition()\n        .duration(2000)\n        .style('fill', color)\n    }\n  },\n  mounted: function () {\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 }\n    const width = 550 - margin.left - margin.right\n    const height = 520 - margin.top - margin.bottom\n    const innerRadius = 90\n    const outerRadius = Math.min(width, height) / 2 // the outerRadius goes from the middle of the SVG area to the border\n\n    // append the svg object\n    const svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`)\n\n    // Scales\n    const x = d3.scaleBand()\n      .range([0, 2 * Math.PI]) // X axis goes from 0 to 2pi = all around the circle. If I stop at 1Pi, it will be around a half circle\n      .align(0) // This does nothing\n      .domain(this.inputData.map(d => d.label)) // The domain of the X axis is the list of states.\n    const max = Math.max.apply(null, this.inputData.map(item => item.value))\n    const y = d3.scaleRadial()\n      .range([innerRadius, outerRadius]) // Domain will be define later.\n      .domain([0, max]) // Domain of Y is from 0 to the max seen in the data\n    // Add the bars\n    svg.append('g')\n      .selectAll('path')\n      .data(this.inputData)\n      .join('path')\n      .attr('fill', d => d.color)\n      .attr('d', d3.arc() // imagine your doing a part of a donut plot\n        .innerRadius(innerRadius)\n        .outerRadius(d => y(d.value))\n        .startAngle(d => x(d.label))\n        .endAngle(d => x(d.label) + x.bandwidth())\n        .padAngle(0.01)\n        .padRadius(innerRadius))\n\n    // Add the labels\n    svg.append('g')\n      .selectAll('g')\n      .data(this.inputData)\n      .join('g')\n      .attr('text-anchor', function (d) { return (x(d.label) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? 'end' : 'start' })\n      .attr('transform', function (d) { return 'rotate(' + ((x(d.label) + x.bandwidth() / 2) * 180 / Math.PI - 90) + ')' + 'translate(' + (y(d.value) + 10) + ',0)' })\n      .append('text')\n      .text(function (d) { return (d.label) })\n      .attr('transform', function (d) { return (x(d.label) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? 'rotate(180)' : 'rotate(-360)' })\n      .style('font-size', '15px')\n      .attr('alignment-baseline', 'middle')\n  }\n}\n\n</script>\n"]}]}