{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/testd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/testd.vue","mtime":1624861276904},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICd0ZXN0ZWxpbycKICBdLAogIG5hbWU6CiAgICAgICd0ZXN0ZCcsCiAgY3JlYXRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIG1hcmdpbiA9IHsgdG9wOiAxMCwgcmlnaHQ6IDMwLCBib3R0b206IDMwLCBsZWZ0OiA0MCB9CiAgICB2YXIgd2lkdGggPSA0NjAgLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodAogICAgdmFyIGhlaWdodCA9IDQwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tCiAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjdGVzdCcpCiAgICAgIC5hcHBlbmQoJ3N2ZycpCiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpCiAgICAgIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSkKICAgICAgLmFwcGVuZCgnZycpCiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLAogICAgICAgICd0cmFuc2xhdGUoJyArIG1hcmdpbi5sZWZ0ICsgJywnICsgbWFyZ2luLnRvcCArICcpJykKICAgIGQzLmpzb24odGhpcy50ZXN0ZWxpbywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdmFyIHggPSBkMy5zY2FsZUxpbmVhcigpCiAgICAgICAgLmRvbWFpbihbMCwgMTAwMF0pIC8vIGNhbiB1c2UgdGhpcyBpbnN0ZWFkIG9mIDEwMDAgdG8gaGF2ZSB0aGUgbWF4IG9mIGRhdGE6IGQzLm1heChkYXRhLCBmdW5jdGlvbihkKSB7IHJldHVybiArZC5wcmljZSB9KQogICAgICAgIC5yYW5nZShbMCwgd2lkdGhdKQogICAgICBzdmcuYXBwZW5kKCdnJykKICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgKyBoZWlnaHQgKyAnKScpCiAgICAgICAgLmNhbGwoZDMuYXhpc0JvdHRvbSh4KSkKCiAgICAgIC8vIHNldCB0aGUgcGFyYW1ldGVycyBmb3IgdGhlIGhpc3RvZ3JhbQogICAgICB2YXIgaGlzdG9ncmFtID0gZDMuaGlzdG9ncmFtKCkKICAgICAgICAudmFsdWUoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQuZG9sbGFycyB9KSAvLyBJIG5lZWQgdG8gZ2l2ZSB0aGUgdmVjdG9yIG9mIHZhbHVlCiAgICAgICAgLmRvbWFpbih4LmRvbWFpbigpKSAvLyB0aGVuIHRoZSBkb21haW4gb2YgdGhlIGdyYXBoaWMKICAgICAgICAudGhyZXNob2xkcyh4LnRpY2tzKDcwKSkgLy8gdGhlbiB0aGUgbnVtYmVycyBvZiBiaW5zCgogICAgICAvLyBBbmQgYXBwbHkgdGhpcyBmdW5jdGlvbiB0byBkYXRhIHRvIGdldCB0aGUgYmlucwogICAgICB2YXIgYmlucyA9IGhpc3RvZ3JhbShkYXRhKQoKICAgICAgLy8gWSBheGlzOiBzY2FsZSBhbmQgZHJhdzoKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpCiAgICAgICAgLnJhbmdlKFtoZWlnaHQsIDBdKQogICAgICB5LmRvbWFpbihbMCwgZDMubWF4KGJpbnMsIGZ1bmN0aW9uIChkKSB7IHJldHVybiBkLmxlbmd0aCB9KV0pIC8vIGQzLmhpc3QgaGFzIHRvIGJlIGNhbGxlZCBiZWZvcmUgdGhlIFkgYXhpcyBvYnZpb3VzbHkKICAgICAgc3ZnLmFwcGVuZCgnZycpCiAgICAgICAgLmNhbGwoZDMuYXhpc0xlZnQoeSkpCgogICAgICAvLyBhcHBlbmQgdGhlIGJhciByZWN0YW5nbGVzIHRvIHRoZSBzdmcgZWxlbWVudAogICAgICBzdmcuc2VsZWN0QWxsKCdyZWN0JykKICAgICAgICAuZGF0YShiaW5zKQogICAgICAgIC5lbnRlcigpCiAgICAgICAgLmFwcGVuZCgncmVjdCcpCiAgICAgICAgLmF0dHIoJ3gnLCAxKQogICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgeChkLngwKSArICcsJyArIHkoZC5sZW5ndGgpICsgJyknIH0pCiAgICAgICAgLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHgoZC54MSkgLSB4KGQueDApIC0gMSB9KQogICAgICAgIC5hdHRyKCdoZWlnaHQnLCBmdW5jdGlvbiAoZCkgeyByZXR1cm4gaGVpZ2h0IC0geShkLmxlbmd0aCkgfSkKICAgICAgICAuc3R5bGUoJ2ZpbGwnLCAnIzY5YjNhMicpCiAgICB9KQogIH0KfQo="},{"version":3,"sources":["testd.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"testd.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"test\">\n    </div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'testelio'\n  ],\n  name:\n      'testd',\n  created: function () {\n    var margin = { top: 10, right: 30, bottom: 30, left: 40 }\n    var width = 460 - margin.left - margin.right\n    var height = 400 - margin.top - margin.bottom\n    var svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform',\n        'translate(' + margin.left + ',' + margin.top + ')')\n    d3.json(this.testelio, function (data) {\n      var x = d3.scaleLinear()\n        .domain([0, 1000]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n        .range([0, width])\n      svg.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x))\n\n      // set the parameters for the histogram\n      var histogram = d3.histogram()\n        .value(function (d) { return d.dollars }) // I need to give the vector of value\n        .domain(x.domain()) // then the domain of the graphic\n        .thresholds(x.ticks(70)) // then the numbers of bins\n\n      // And apply this function to data to get the bins\n      var bins = histogram(data)\n\n      // Y axis: scale and draw:\n      var y = d3.scaleLinear()\n        .range([height, 0])\n      y.domain([0, d3.max(bins, function (d) { return d.length })]) // d3.hist has to be called before the Y axis obviously\n      svg.append('g')\n        .call(d3.axisLeft(y))\n\n      // append the bar rectangles to the svg element\n      svg.selectAll('rect')\n        .data(bins)\n        .enter()\n        .append('rect')\n        .attr('x', 1)\n        .attr('transform', function (d) { return 'translate(' + x(d.x0) + ',' + y(d.length) + ')' })\n        .attr('width', function (d) { return x(d.x1) - x(d.x0) - 1 })\n        .attr('height', function (d) { return height - y(d.length) })\n        .style('fill', '#69b3a2')\n    })\n  }\n}\n</script>\n"]}]}