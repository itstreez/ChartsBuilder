{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/doghnut.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/doghnut.vue","mtime":1626155468732},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICdpbnB1dERhdGEnCgogIF0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewoKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZUNvbG9yIChjb2xvcikgewogICAgICBkMy5zZWxlY3RBbGwoJ3BhdGgnKQogICAgICAgIC50cmFuc2l0aW9uKCkKICAgICAgICAuZHVyYXRpb24oMjAwMCkKICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBjb2xvcikKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHZhciB3aWR0aCA9IDQ1MAogICAgdmFyIGhlaWdodCA9IDQ1MAogICAgdmFyIG1hcmdpbiA9IDQwCgogICAgLy8gVGhlIHJhZGl1cyBvZiB0aGUgcGllcGxvdCBpcyBoYWxmIHRoZSB3aWR0aCBvciBoYWxmIHRoZSBoZWlnaHQgKHNtYWxsZXN0IG9uZSkuIEkgc3VidHJhY3QgYSBiaXQgb2YgbWFyZ2luLgogICAgdmFyIHJhZGl1cyA9IE1hdGgubWluKHdpZHRoLCBoZWlnaHQpIC8gMiAtIG1hcmdpbgoKICAgIC8vIGFwcGVuZCB0aGUgc3ZnIG9iamVjdCB0byB0aGUgZGl2IGNhbGxlZCAnbXlfZGF0YXZpeicKICAgIHZhciBzdmcgPSBkMwogICAgICAuc2VsZWN0KCcjdGVzdCcpCiAgICAgIC5hcHBlbmQoJ3N2ZycpCiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoKQogICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0KQogICAgICAuYXBwZW5kKCdnJykKICAgICAgLmF0dHIoCiAgICAgICAgJ3RyYW5zZm9ybScsCiAgICAgICAgJ3RyYW5zbGF0ZSgnICsgd2lkdGggLyAyICsgJywnICsgaGVpZ2h0IC8gMiArICcpJwogICAgICApCgogICAgLy8gc2V0IHRoZSBjb2xvciBzY2FsZQogICAgY29uc3QgdmFsZXVycyA9IHRoaXMuaW5wdXREYXRhLm1hcChpdGVtID0+IGl0ZW0udmFsdWUpCiAgICBjb25zdCB0ZXh0ZSA9IHRoaXMuaW5wdXREYXRhLm1hcChpdGVtID0+IGl0ZW0ubGFiZWwpCiAgICBjb25zdCBjb3VsZXVycyA9IHRoaXMuaW5wdXREYXRhLm1hcChpdGVtID0+IGl0ZW0uY29sb3IpCiAgICB2YXIgY29sb3IgPSBkMwogICAgICAuc2NhbGVPcmRpbmFsKCkKICAgICAgLmRvbWFpbihPYmplY3Qua2V5cyh2YWxldXJzKSkKICAgICAgLnJhbmdlKGNvdWxldXJzKQoKICAgIC8vIENvbXB1dGUgdGhlIHBvc2l0aW9uIG9mIGVhY2ggZ3JvdXAgb24gdGhlIHBpZToKICAgIHZhciBwaWUgPSBkMy5waWUoKS52YWx1ZShmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gZFsxXQogICAgfSkKCiAgICB2YXIgZGF0YVJlYWR5ID0gcGllKE9iamVjdC5lbnRyaWVzKHZhbGV1cnMpKQoKICAgIC8vIEJ1aWxkIHRoZSBwaWUgY2hhcnQ6IEJhc2ljYWxseSwgZWFjaCBwYXJ0IG9mIHRoZSBwaWUgaXMgYSBwYXRoIHRoYXQgd2UgYnVpbGQgdXNpbmcgdGhlIGFyYyBmdW5jdGlvbi4KICAgIHN2ZwogICAgICAuc2VsZWN0QWxsKCd3aGF0ZXZlcicpCiAgICAgIC5kYXRhKGRhdGFSZWFkeSkKICAgICAgLmVudGVyKCkKICAgICAgLmFwcGVuZCgncGF0aCcpCiAgICAgIC5hdHRyKAogICAgICAgICdkJywKICAgICAgICBkMwogICAgICAgICAgLmFyYygpCiAgICAgICAgICAuaW5uZXJSYWRpdXMoMTAwKSAvLyBUaGlzIGlzIHRoZSBzaXplIG9mIHRoZSBkb251dCBob2xlCiAgICAgICAgICAub3V0ZXJSYWRpdXMocmFkaXVzKQogICAgICApCiAgICAgIC5hdHRyKCdmaWxsJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gY29sb3IoZC5kYXRhWzBdKQogICAgICB9KQogICAgICAuYXBwZW5kKCd0ZXh0JykKICAgICAgLnRleHQodGV4dGUpCiAgICAgIC5hdHRyKCdzdHJva2UnLCAnYmxhY2snKQogICAgICAuc3R5bGUoJ3N0cm9rZS13aWR0aCcsICc3cHgnKQogICAgICAuc3R5bGUoJ29wYWNpdHknLCA1KQogIH0KfQoK"},{"version":3,"sources":["doghnut.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"doghnut.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"test\">\n   <button @click=\"changeColor('blue')\">Get blue</button>\n<button @click=\"changeColor('red')\">Get red</button>\n\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'inputData'\n\n  ],\n  data () {\n    return {\n\n    }\n  },\n  methods: {\n    changeColor (color) {\n      d3.selectAll('path')\n        .transition()\n        .duration(2000)\n        .style('fill', color)\n    }\n  },\n  mounted: function () {\n    var width = 450\n    var height = 450\n    var margin = 40\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3\n      .select('#test')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ',' + height / 2 + ')'\n      )\n\n    // set the color scale\n    const valeurs = this.inputData.map(item => item.value)\n    const texte = this.inputData.map(item => item.label)\n    const couleurs = this.inputData.map(item => item.color)\n    var color = d3\n      .scaleOrdinal()\n      .domain(Object.keys(valeurs))\n      .range(couleurs)\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie().value(function (d) {\n      return d[1]\n    })\n\n    var dataReady = pie(Object.entries(valeurs))\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('whatever')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr(\n        'd',\n        d3\n          .arc()\n          .innerRadius(100) // This is the size of the donut hole\n          .outerRadius(radius)\n      )\n      .attr('fill', function (d) {\n        return color(d.data[0])\n      })\n      .append('text')\n      .text(texte)\n      .attr('stroke', 'black')\n      .style('stroke-width', '7px')\n      .style('opacity', 5)\n  }\n}\n\n</script>\n"]}]}