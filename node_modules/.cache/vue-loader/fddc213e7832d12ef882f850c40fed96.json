{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/src/views/Templates.vue?vue&type=template&id=42b745ef&scoped=true&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/src/views/Templates.vue","mtime":1627017977923},{"path":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Documents/Internship-Project/project-charts original copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}