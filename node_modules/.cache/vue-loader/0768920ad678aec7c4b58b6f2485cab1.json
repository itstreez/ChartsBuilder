{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/linechart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/linechart.vue","mtime":1626155522413},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsKICAgICdpbnB1dERhdGEnCgogIF0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewoKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZXRoZW1lIChjb2xvcikgewogICAgICBkMy5zZWxlY3RBbGwoJ3BhdGgnKQogICAgICAgIC50cmFuc2l0aW9uKCkKICAgICAgICAuZHVyYXRpb24oMjAwMCkKICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBjb2xvcikKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIGNvbnN0IG1hcmdpbiA9IHsgdG9wOiAzMCwgcmlnaHQ6IDMwLCBib3R0b206IDcwLCBsZWZ0OiA2MCB9CiAgICBjb25zdCB3aWR0aCA9IDU1MCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0CiAgICBjb25zdCBoZWlnaHQgPSA1MjAgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbQoKICAgIC8vIGFwcGVuZCB0aGUgc3ZnIG9iamVjdCB0byB0aGUgYm9keSBvZiB0aGUgcGFnZQogICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3Rlc3QnKQogICAgICAuYXBwZW5kKCdzdmcnKQogICAgICAuYXR0cignd2lkdGgnLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KQogICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pCiAgICAgIC5hcHBlbmQoJ2cnKQogICAgICAuYXR0cigndHJhbnNmb3JtJywKICAgICAgICAndHJhbnNsYXRlKCcgKyBtYXJnaW4ubGVmdCArICcsJyArIG1hcmdpbi50b3AgKyAnKScpCgogICAgLy8gQWRkIFggYXhpcyAtLT4gaXQgaXMgYSBkYXRlIGZvcm1hdAogICAgY29uc3QgeCA9IGQzLnNjYWxlQmFuZCgpCiAgICAgIC5yYW5nZShbMCwgd2lkdGhdKQogICAgICAuZG9tYWluKHRoaXMuaW5wdXREYXRhLm1hcChkID0+IGQubGFiZWwyKSkKICAgICAgLnJhbmdlKFswLCB3aWR0aF0pCiAgICBzdmcuYXBwZW5kKCdnJykKICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwnICsgaGVpZ2h0ICsgJyknKQogICAgICAuY2FsbChkMy5heGlzQm90dG9tKHgpKQogICAgICAuc2VsZWN0QWxsKCd0ZXh0JykKICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMTAsMCknKQogICAgICAuc3R5bGUoJ3RleHQtYW5jaG9yJywgJ2VuZCcpCiAgICAgIC5zdHlsZSgnZm9udC1zaXplJywgMTUpCgogICAgLy8gQWRkIFkgYXhpcwogICAgY29uc3QgbWF4ID0gTWF0aC5tYXguYXBwbHkobnVsbCwgdGhpcy5pbnB1dERhdGEubWFwKGl0ZW0gPT4gaXRlbS52YWx1ZSkpCiAgICBjb25zdCB5ID0gZDMuc2NhbGVMaW5lYXIoKQogICAgICAuZG9tYWluKFswLCBtYXhdKQogICAgICAucmFuZ2UoW2hlaWdodCwgMF0pCiAgICBzdmcuYXBwZW5kKCdnJykKICAgICAgLmNhbGwoZDMuYXhpc0xlZnQoeSkpCiAgICAgIC5zZWxlY3RBbGwoJ3RleHQnKQogICAgICAuc3R5bGUoJ2ZvbnQtc2l6ZScsIDE1KQoKICAgIC8vIEFkZCB0aGUgbGluZQogICAgc3ZnLmFwcGVuZCgncGF0aCcpCiAgICAgIC5kYXR1bSh0aGlzLmlucHV0RGF0YSkKICAgICAgLmF0dHIoJ2ZpbGwnLCAnbm9uZScpCiAgICAgIC5hdHRyKCdzdHJva2UnLCAnYmxhY2snKQogICAgICAuYXR0cignc3Ryb2tlLXdpZHRoJywgMS41KQogICAgICAuYXR0cignZCcsIGQzLmxpbmUoKQogICAgICAgIC5jdXJ2ZShkMy5jdXJ2ZUJhc2lzKSAvLyBKdXN0IGFkZCB0aGF0IHRvIGhhdmUgYSBjdXJ2ZSBpbnN0ZWFkIG9mIHNlZ21lbnRzCiAgICAgICAgLngoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHgoZC5sYWJlbDIpIH0pCiAgICAgICAgLnkoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHkoZC52YWx1ZSkgfSkKICAgICAgKQogIH0KfQoK"},{"version":3,"sources":["linechart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"linechart.vue","sourceRoot":"src/components","sourcesContent":[" <template>\n<div id=\"test\">\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'inputData'\n\n  ],\n  data () {\n    return {\n\n    }\n  },\n  methods: {\n    changetheme (color) {\n      d3.selectAll('path')\n        .transition()\n        .duration(2000)\n        .style('fill', color)\n    }\n  },\n  mounted: function () {\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 }\n    const width = 550 - margin.left - margin.right\n    const height = 520 - margin.top - margin.bottom\n\n    // append the svg object to the body of the page\n    var svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform',\n        'translate(' + margin.left + ',' + margin.top + ')')\n\n    // Add X axis --> it is a date format\n    const x = d3.scaleBand()\n      .range([0, width])\n      .domain(this.inputData.map(d => d.label2))\n      .range([0, width])\n    svg.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x))\n      .selectAll('text')\n      .attr('transform', 'translate(10,0)')\n      .style('text-anchor', 'end')\n      .style('font-size', 15)\n\n    // Add Y axis\n    const max = Math.max.apply(null, this.inputData.map(item => item.value))\n    const y = d3.scaleLinear()\n      .domain([0, max])\n      .range([height, 0])\n    svg.append('g')\n      .call(d3.axisLeft(y))\n      .selectAll('text')\n      .style('font-size', 15)\n\n    // Add the line\n    svg.append('path')\n      .datum(this.inputData)\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1.5)\n      .attr('d', d3.line()\n        .curve(d3.curveBasis) // Just add that to have a curve instead of segments\n        .x(function (d) { return x(d.label2) })\n        .y(function (d) { return y(d.value) })\n      )\n  }\n}\n\n</script>\n"]}]}