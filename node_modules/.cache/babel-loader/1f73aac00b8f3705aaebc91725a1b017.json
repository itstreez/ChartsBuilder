{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/doghnut.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/doghnut.vue","mtime":1626155468732},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ2lucHV0RGF0YSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGFuZ2VDb2xvcjogZnVuY3Rpb24gY2hhbmdlQ29sb3IoY29sb3IpIHsKICAgICAgZDMuc2VsZWN0QWxsKCdwYXRoJykudHJhbnNpdGlvbigpLmR1cmF0aW9uKDIwMDApLnN0eWxlKCdmaWxsJywgY29sb3IpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciB3aWR0aCA9IDQ1MDsKICAgIHZhciBoZWlnaHQgPSA0NTA7CiAgICB2YXIgbWFyZ2luID0gNDA7IC8vIFRoZSByYWRpdXMgb2YgdGhlIHBpZXBsb3QgaXMgaGFsZiB0aGUgd2lkdGggb3IgaGFsZiB0aGUgaGVpZ2h0IChzbWFsbGVzdCBvbmUpLiBJIHN1YnRyYWN0IGEgYml0IG9mIG1hcmdpbi4KCiAgICB2YXIgcmFkaXVzID0gTWF0aC5taW4od2lkdGgsIGhlaWdodCkgLyAyIC0gbWFyZ2luOyAvLyBhcHBlbmQgdGhlIHN2ZyBvYmplY3QgdG8gdGhlIGRpdiBjYWxsZWQgJ215X2RhdGF2aXonCgogICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3Rlc3QnKS5hcHBlbmQoJ3N2ZycpLmF0dHIoJ3dpZHRoJywgd2lkdGgpLmF0dHIoJ2hlaWdodCcsIGhlaWdodCkuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgd2lkdGggLyAyICsgJywnICsgaGVpZ2h0IC8gMiArICcpJyk7IC8vIHNldCB0aGUgY29sb3Igc2NhbGUKCiAgICB2YXIgdmFsZXVycyA9IHRoaXMuaW5wdXREYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS52YWx1ZTsKICAgIH0pOwogICAgdmFyIHRleHRlID0gdGhpcy5pbnB1dERhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiBpdGVtLmxhYmVsOwogICAgfSk7CiAgICB2YXIgY291bGV1cnMgPSB0aGlzLmlucHV0RGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0uY29sb3I7CiAgICB9KTsKICAgIHZhciBjb2xvciA9IGQzLnNjYWxlT3JkaW5hbCgpLmRvbWFpbihPYmplY3Qua2V5cyh2YWxldXJzKSkucmFuZ2UoY291bGV1cnMpOyAvLyBDb21wdXRlIHRoZSBwb3NpdGlvbiBvZiBlYWNoIGdyb3VwIG9uIHRoZSBwaWU6CgogICAgdmFyIHBpZSA9IGQzLnBpZSgpLnZhbHVlKGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiBkWzFdOwogICAgfSk7CiAgICB2YXIgZGF0YVJlYWR5ID0gcGllKE9iamVjdC5lbnRyaWVzKHZhbGV1cnMpKTsgLy8gQnVpbGQgdGhlIHBpZSBjaGFydDogQmFzaWNhbGx5LCBlYWNoIHBhcnQgb2YgdGhlIHBpZSBpcyBhIHBhdGggdGhhdCB3ZSBidWlsZCB1c2luZyB0aGUgYXJjIGZ1bmN0aW9uLgoKICAgIHN2Zy5zZWxlY3RBbGwoJ3doYXRldmVyJykuZGF0YShkYXRhUmVhZHkpLmVudGVyKCkuYXBwZW5kKCdwYXRoJykuYXR0cignZCcsIGQzLmFyYygpLmlubmVyUmFkaXVzKDEwMCkgLy8gVGhpcyBpcyB0aGUgc2l6ZSBvZiB0aGUgZG9udXQgaG9sZQogICAgLm91dGVyUmFkaXVzKHJhZGl1cykpLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gY29sb3IoZC5kYXRhWzBdKTsKICAgIH0pLmFwcGVuZCgndGV4dCcpLnRleHQodGV4dGUpLmF0dHIoJ3N0cm9rZScsICdibGFjaycpLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAnN3B4Jykuc3R5bGUoJ29wYWNpdHknLCA1KTsKICB9Cn07"},{"version":3,"sources":["doghnut.vue"],"names":[],"mappings":";;;;;;;;;;AAQA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CACA,WADA,CADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA,EAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,MAAA,EACA,UADA,GAEA,QAFA,CAEA,IAFA,EAGA,KAHA,CAGA,MAHA,EAGA,KAHA;AAIA;AANA,GAVA;AAkBA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,KAAA,GAAA,GAAA;AACA,QAAA,MAAA,GAAA,GAAA;AACA,QAAA,MAAA,GAAA,EAAA,CAHA,CAKA;;AACA,QAAA,MAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,IAAA,CAAA,GAAA,MAAA,CANA,CAQA;;AACA,QAAA,GAAA,GAAA,EAAA,CACA,MADA,CACA,OADA,EAEA,MAFA,CAEA,KAFA,EAGA,IAHA,CAGA,OAHA,EAGA,KAHA,EAIA,IAJA,CAIA,QAJA,EAIA,MAJA,EAKA,MALA,CAKA,GALA,EAMA,IANA,CAOA,WAPA,EAQA,eAAA,KAAA,GAAA,CAAA,GAAA,GAAA,GAAA,MAAA,GAAA,CAAA,GAAA,GARA,CAAA,CATA,CAoBA;;AACA,QAAA,OAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,aAAA,IAAA,CAAA,KAAA;AAAA,KAAA,CAAA;AACA,QAAA,KAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,aAAA,IAAA,CAAA,KAAA;AAAA,KAAA,CAAA;AACA,QAAA,QAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,UAAA,IAAA;AAAA,aAAA,IAAA,CAAA,KAAA;AAAA,KAAA,CAAA;AACA,QAAA,KAAA,GAAA,EAAA,CACA,YADA,GAEA,MAFA,CAEA,MAAA,CAAA,IAAA,CAAA,OAAA,CAFA,EAGA,KAHA,CAGA,QAHA,CAAA,CAxBA,CA6BA;;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,GAAA,GAAA,KAAA,CAAA,UAAA,CAAA,EAAA;AACA,aAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAFA,CAAA;AAIA,QAAA,SAAA,GAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAlCA,CAoCA;;AACA,IAAA,GAAA,CACA,SADA,CACA,UADA,EAEA,IAFA,CAEA,SAFA,EAGA,KAHA,GAIA,MAJA,CAIA,MAJA,EAKA,IALA,CAMA,GANA,EAOA,EAAA,CACA,GADA,GAEA,WAFA,CAEA,GAFA,EAEA;AAFA,KAGA,WAHA,CAGA,MAHA,CAPA,EAYA,IAZA,CAYA,MAZA,EAYA,UAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,KAdA,EAeA,MAfA,CAeA,MAfA,EAgBA,IAhBA,CAgBA,KAhBA,EAiBA,IAjBA,CAiBA,QAjBA,EAiBA,OAjBA,EAkBA,KAlBA,CAkBA,cAlBA,EAkBA,KAlBA,EAmBA,KAnBA,CAmBA,SAnBA,EAmBA,CAnBA;AAoBA;AA3EA,CAAA","sourcesContent":["<template>\n<div id=\"test\">\n   <button @click=\"changeColor('blue')\">Get blue</button>\n<button @click=\"changeColor('red')\">Get red</button>\n\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'inputData'\n\n  ],\n  data () {\n    return {\n\n    }\n  },\n  methods: {\n    changeColor (color) {\n      d3.selectAll('path')\n        .transition()\n        .duration(2000)\n        .style('fill', color)\n    }\n  },\n  mounted: function () {\n    var width = 450\n    var height = 450\n    var margin = 40\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3\n      .select('#test')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ',' + height / 2 + ')'\n      )\n\n    // set the color scale\n    const valeurs = this.inputData.map(item => item.value)\n    const texte = this.inputData.map(item => item.label)\n    const couleurs = this.inputData.map(item => item.color)\n    var color = d3\n      .scaleOrdinal()\n      .domain(Object.keys(valeurs))\n      .range(couleurs)\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie().value(function (d) {\n      return d[1]\n    })\n\n    var dataReady = pie(Object.entries(valeurs))\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('whatever')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr(\n        'd',\n        d3\n          .arc()\n          .innerRadius(100) // This is the size of the donut hole\n          .outerRadius(radius)\n      )\n      .attr('fill', function (d) {\n        return color(d.data[0])\n      })\n      .append('text')\n      .text(texte)\n      .attr('stroke', 'black')\n      .style('stroke-width', '7px')\n      .style('opacity', 5)\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}