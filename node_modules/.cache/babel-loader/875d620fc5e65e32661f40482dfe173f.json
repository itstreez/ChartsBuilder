{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/histogramme.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/histogramme.vue","mtime":1625034844639},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ2NoYXJ0RGF0YSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2xvcnRlc3Q6ICdkMy5zY2FsZU9yZGluYWwoWyJyZWQiLCJibGFjayJdKScsCiAgICAgIHZhbHVlOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZUNvbG9yOiBmdW5jdGlvbiBjaGFuZ2VDb2xvcihjb2xvcikgewogICAgICBkMy5zZWxlY3RBbGwoJ3JlY3QnKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMjAwMCkuc3R5bGUoJ2ZpbGwnLCBjb2xvcik7CiAgICB9LAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMuZGF0YS5wdXNoKDIwKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgbWFyZ2luID0gewogICAgICB0b3A6IDMwLAogICAgICByaWdodDogMzAsCiAgICAgIGJvdHRvbTogNzAsCiAgICAgIGxlZnQ6IDYwCiAgICB9OwogICAgdmFyIHdpZHRoID0gNTUwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7CiAgICB2YXIgaGVpZ2h0ID0gNTIwIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207IC8vIGFwcGVuZCB0aGUgc3ZnIG9iamVjdCB0byB0aGUgYm9keSBvZiB0aGUgcGFnZQoKICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoJyN0ZXN0JykuYXBwZW5kKCdzdmcnKS5hdHRyKCd3aWR0aCcsIHdpZHRoICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpLmF0dHIoJ2hlaWdodCcsIGhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKS5hcHBlbmQoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCAidHJhbnNsYXRlKCIuY29uY2F0KG1hcmdpbi5sZWZ0LCAiLCIpLmNvbmNhdChtYXJnaW4udG9wLCAiKSIpKTsgLy8gUGFyc2UgdGhlIERhdGEKICAgIC8vIFggYXhpcwoKICAgIHZhciB4ID0gZDMuc2NhbGVCYW5kKCkucmFuZ2UoWzAsIHdpZHRoXSkuZG9tYWluKHRoaXMuY2hhcnREYXRhLm1hcChmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gZC5sYWJlbDsKICAgIH0pKS5wYWRkaW5nKDAuMik7CiAgICBzdmcuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgInRyYW5zbGF0ZSgwLCAiLmNvbmNhdChoZWlnaHQsICIpIikpLmNhbGwoZDMuYXhpc0JvdHRvbSh4KSkuc2VsZWN0QWxsKCd0ZXh0JykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgtMTAsMClyb3RhdGUoLTQ1KScpLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdlbmQnKS5zdHlsZSgnZm9udC1zaXplJywgMTUpOwogICAgdmFyIG1heCA9IE1hdGgubWF4LmFwcGx5KG51bGwsIHRoaXMuY2hhcnREYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS52YWx1ZTsKICAgIH0pKTsKICAgIHZhciB5ID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oWzAsIG1heF0pLnJhbmdlKFtoZWlnaHQsIDBdKTsKICAgIHN2Zy5hcHBlbmQoJ2cnKS5jYWxsKGQzLmF4aXNMZWZ0KHkpKS5zZWxlY3RBbGwoJ3RleHQnKS5zdHlsZSgnZm9udC1zaXplJywgMTUpOyAvLyBCYXJzCgogICAgc3ZnLnNlbGVjdEFsbCgnbXliYXInKS5kYXRhKHRoaXMuY2hhcnREYXRhKS5qb2luKCdyZWN0JykuYXR0cigneCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiB4KGQubGFiZWwpOwogICAgfSkuYXR0cigneScsIGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiB5KGQudmFsdWUpOwogICAgfSkuYXR0cignd2lkdGgnLCB4LmJhbmR3aWR0aCgpKS5hdHRyKCdoZWlnaHQnLCBmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gaGVpZ2h0IC0geShkLnZhbHVlKTsKICAgIH0pLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkgewogICAgICByZXR1cm4gZC5jb2xvcjsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["histogramme.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"test\">\n   <button @click=\"changeColor('blue')\">Get blue</button>\n<button @click=\"changeColor('red')\">Get red</button>\n\n</div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'chartData'\n\n  ],\n\n  data () {\n    return {\n      colortest: 'd3.scaleOrdinal([\"red\",\"black\"])',\n      value: ''\n    }\n  },\n  methods: {\n    changeColor (color) {\n      d3.selectAll('rect')\n        .transition()\n        .duration(2000)\n        .style('fill', color)\n    },\n    add () {\n      this.data.push(20)\n    }\n  },\n  mounted: function () {\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 }\n    const width = 550 - margin.left - margin.right\n    const height = 520 - margin.top - margin.bottom\n\n    // append the svg object to the body of the page\n    const svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n    // Parse the Data\n    // X axis\n    const x = d3.scaleBand()\n      .range([0, width])\n      .domain(this.chartData.map(d => d.label))\n      .padding(0.2)\n    svg.append('g')\n      .attr('transform', `translate(0, ${height})`)\n      .call(d3.axisBottom(x))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end')\n      .style('font-size', 15)\n\n    const max = Math.max.apply(null, this.chartData.map(item => item.value))\n    const y = d3.scaleLinear()\n      .domain([0, max])\n      .range([height, 0])\n    svg.append('g')\n      .call(d3.axisLeft(y))\n      .selectAll('text')\n      .style('font-size', 15)\n\n    // Bars\n    svg.selectAll('mybar')\n      .data(this.chartData)\n      .join('rect')\n      .attr('x', d => x(d.label))\n      .attr('y', d => y(d.value))\n      .attr('width', x.bandwidth())\n      .attr('height', d => height - y(d.value))\n      .attr('fill', d => d.color)\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}