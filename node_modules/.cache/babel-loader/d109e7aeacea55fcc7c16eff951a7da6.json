{"remainingRequest":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/testd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/src/components/testd.vue","mtime":1624861276904},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eliomouhasseb3/Desktop/Internship-Project/project-charts copy/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsndGVzdGVsaW8nXSwKICBuYW1lOiAndGVzdGQnLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgbWFyZ2luID0gewogICAgICB0b3A6IDEwLAogICAgICByaWdodDogMzAsCiAgICAgIGJvdHRvbTogMzAsCiAgICAgIGxlZnQ6IDQwCiAgICB9OwogICAgdmFyIHdpZHRoID0gNDYwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7CiAgICB2YXIgaGVpZ2h0ID0gNDAwIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207CiAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjdGVzdCcpLmFwcGVuZCgnc3ZnJykuYXR0cignd2lkdGgnLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KS5hdHRyKCdoZWlnaHQnLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSkuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgbWFyZ2luLmxlZnQgKyAnLCcgKyBtYXJnaW4udG9wICsgJyknKTsKICAgIGQzLmpzb24odGhpcy50ZXN0ZWxpbywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgdmFyIHggPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgMTAwMF0pIC8vIGNhbiB1c2UgdGhpcyBpbnN0ZWFkIG9mIDEwMDAgdG8gaGF2ZSB0aGUgbWF4IG9mIGRhdGE6IGQzLm1heChkYXRhLCBmdW5jdGlvbihkKSB7IHJldHVybiArZC5wcmljZSB9KQogICAgICAucmFuZ2UoWzAsIHdpZHRoXSk7CiAgICAgIHN2Zy5hcHBlbmQoJ2cnKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKDAsJyArIGhlaWdodCArICcpJykuY2FsbChkMy5heGlzQm90dG9tKHgpKTsgLy8gc2V0IHRoZSBwYXJhbWV0ZXJzIGZvciB0aGUgaGlzdG9ncmFtCgogICAgICB2YXIgaGlzdG9ncmFtID0gZDMuaGlzdG9ncmFtKCkudmFsdWUoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5kb2xsYXJzOwogICAgICB9KSAvLyBJIG5lZWQgdG8gZ2l2ZSB0aGUgdmVjdG9yIG9mIHZhbHVlCiAgICAgIC5kb21haW4oeC5kb21haW4oKSkgLy8gdGhlbiB0aGUgZG9tYWluIG9mIHRoZSBncmFwaGljCiAgICAgIC50aHJlc2hvbGRzKHgudGlja3MoNzApKTsgLy8gdGhlbiB0aGUgbnVtYmVycyBvZiBiaW5zCiAgICAgIC8vIEFuZCBhcHBseSB0aGlzIGZ1bmN0aW9uIHRvIGRhdGEgdG8gZ2V0IHRoZSBiaW5zCgogICAgICB2YXIgYmlucyA9IGhpc3RvZ3JhbShkYXRhKTsgLy8gWSBheGlzOiBzY2FsZSBhbmQgZHJhdzoKCiAgICAgIHZhciB5ID0gZDMuc2NhbGVMaW5lYXIoKS5yYW5nZShbaGVpZ2h0LCAwXSk7CiAgICAgIHkuZG9tYWluKFswLCBkMy5tYXgoYmlucywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5sZW5ndGg7CiAgICAgIH0pXSk7IC8vIGQzLmhpc3QgaGFzIHRvIGJlIGNhbGxlZCBiZWZvcmUgdGhlIFkgYXhpcyBvYnZpb3VzbHkKCiAgICAgIHN2Zy5hcHBlbmQoJ2cnKS5jYWxsKGQzLmF4aXNMZWZ0KHkpKTsgLy8gYXBwZW5kIHRoZSBiYXIgcmVjdGFuZ2xlcyB0byB0aGUgc3ZnIGVsZW1lbnQKCiAgICAgIHN2Zy5zZWxlY3RBbGwoJ3JlY3QnKS5kYXRhKGJpbnMpLmVudGVyKCkuYXBwZW5kKCdyZWN0JykuYXR0cigneCcsIDEpLmF0dHIoJ3RyYW5zZm9ybScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHgoZC54MCkgKyAnLCcgKyB5KGQubGVuZ3RoKSArICcpJzsKICAgICAgfSkuYXR0cignd2lkdGgnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB4KGQueDEpIC0geChkLngwKSAtIDE7CiAgICAgIH0pLmF0dHIoJ2hlaWdodCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGhlaWdodCAtIHkoZC5sZW5ndGgpOwogICAgICB9KS5zdHlsZSgnZmlsbCcsICcjNjliM2EyJyk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["testd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"test\">\n    </div>\n</template>\n<script>\nimport * as d3 from 'd3'\nexport default {\n  props: [\n    'testelio'\n  ],\n  name:\n      'testd',\n  created: function () {\n    var margin = { top: 10, right: 30, bottom: 30, left: 40 }\n    var width = 460 - margin.left - margin.right\n    var height = 400 - margin.top - margin.bottom\n    var svg = d3.select('#test')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform',\n        'translate(' + margin.left + ',' + margin.top + ')')\n    d3.json(this.testelio, function (data) {\n      var x = d3.scaleLinear()\n        .domain([0, 1000]) // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n        .range([0, width])\n      svg.append('g')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x))\n\n      // set the parameters for the histogram\n      var histogram = d3.histogram()\n        .value(function (d) { return d.dollars }) // I need to give the vector of value\n        .domain(x.domain()) // then the domain of the graphic\n        .thresholds(x.ticks(70)) // then the numbers of bins\n\n      // And apply this function to data to get the bins\n      var bins = histogram(data)\n\n      // Y axis: scale and draw:\n      var y = d3.scaleLinear()\n        .range([height, 0])\n      y.domain([0, d3.max(bins, function (d) { return d.length })]) // d3.hist has to be called before the Y axis obviously\n      svg.append('g')\n        .call(d3.axisLeft(y))\n\n      // append the bar rectangles to the svg element\n      svg.selectAll('rect')\n        .data(bins)\n        .enter()\n        .append('rect')\n        .attr('x', 1)\n        .attr('transform', function (d) { return 'translate(' + x(d.x0) + ',' + y(d.length) + ')' })\n        .attr('width', function (d) { return x(d.x1) - x(d.x0) - 1 })\n        .attr('height', function (d) { return height - y(d.length) })\n        .style('fill', '#69b3a2')\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}